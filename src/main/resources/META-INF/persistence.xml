<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
             http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">

    <persistence-unit name="hibernate-persistence-unit">
        <description>
            Hibernate from beginning
        </description>

        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <!--
        by definition of schema

                    Managed class to be included in the persistence unit and
                    to scan for annotations.  It should be annotated
                    with either @Entity, @Embeddable or @MappedSuperclass.

         But it is not required to have.
         Hibernate somehow will scan classes and lookup @Entity
        <class>com.peter.model.entity.Person</class>
        -->
        <properties>
            <property name="javax.persistence.jdbc.driver"
                      value="org.h2.Driver" />

            <property name="javax.persistence.jdbc.url"
                      value="jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE" />

            <property name="javax.persistence.jdbc.user"
                      value="sa" />

            <property name="javax.persistence.jdbc.password"
                      value="" />

            <property name="hibernate.show_sql"
                      value="true" />

            <property name="hibernate.hbm2ddl.auto"
                      value="create" />
<!--
            <property name="hibernate.physical_naming_strategy"
                      value="com.peter.model.entity.naming.CustomisedPhysicalNamingStrategy" />

                      -->
        </properties>

    </persistence-unit>

</persistence>